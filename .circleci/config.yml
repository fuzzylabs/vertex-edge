version: 2.1

orbs:
  python: circleci/python@1.4.0
  gcp-cli: circleci/gcp-cli@2.2.0

commands:
  dvc_google_auth:
    description: Configure the DVC to use Google Cloud service account
    steps:
      - run: |
          echo $GCLOUD_SERVICE_KEY > ${HOME}/gcloud-service-key.json
          dvc remote modify --local storage credentialpath ${HOME}/gcloud-service-key.json

jobs:
  run-dvc-pipeline:
    parameters:
      pipeline_name:
        type: string
    executor: python/default
    working_directory: ~/project/models/pipelines/<< parameters.pipeline_name >>
    steps:
      - checkout:
          path: ~/project
      - python/install-packages:
          pkg-manager: pip
      - dvc_google_auth
      - run:
          name: DVC pipeline run
          command: |
            dvc pull
            GOOGLE_APPLICATION_CREDENTIALS=${HOME}/gcloud-service-key.json IMAGE_TAG=${CIRCLE_SHA1} dvc repro
      - run:
          name: Deploy model
          no_output_timeout: 30m
          command: |
            PYTHONPATH=../../../ GOOGLE_APPLICATION_CREDENTIALS=${HOME}/gcloud-service-key.json python3 deploy-vertex.py
  build-docker:
    executor: python/default
    parameters:
      edge_command:
        type: string
    working_directory: ~/project/
    steps:
      - checkout:
          path: ~/project
      - setup_remote_docker
      - gcp-cli/install
      - gcp-cli/initialize
      - run:
          name: Call vertex:edge to build and push Docker image
          command: |
            gcloud auth configure-docker
            TAG=${CIRCLE_SHA1} python edge.py << parameters.edge_command >>
  cloud-run-deploy:
    executor: python/default
    working_directory: ~/project/
    steps:
      - checkout:
          path: ~/project
      - gcp-cli/install
      - gcp-cli/initialize
      - run:
          name: Deploy Cloud Run
          command: |
            TAG=${CIRCLE_SHA1} python edge.py cloud-run-webapp
workflows:
  version: 2
  reference-example:
    jobs:
      - build-docker:
          name: prediction-server-build-docker
          image_name: gcr.io/fuzzylabs/fashion-mnist-prediction-server
          dockerfile_path: examples/reference
#          filters:
#            branches:
#              only:
#                - master
      - run-dvc-pipeline:
          name: reference-example-dvc-pipeline
          requires:
            - prediction-server-build-docker
#          filters:
#            branches:
#              only:
#                - master

  webapp:
    jobs:
      - build-docker:
          name: webapp-build-docker
          edge_command: docker-webapp
          filters:
            branches:
              only:
                - master
      - cloud-run-deploy:
          name: webapp-cloud-run-deploy
          requires:
            - webapp-build-docker
          filters:
            branches:
              only:
                - master
